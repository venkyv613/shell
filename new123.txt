***************************************
bash file.sh 
sh means born shell .sh is optional , .not mandatory 
.sh only identification which is only for understanding people
***************************************

sh 1.sh or bash 1.sh or ./1.sh

**************************************

bash file.sh bash - default shell file.sh - it contains group of commands

every shell file general way execute , but in this file have execute permission. ./file.sh

read -4     r
write-2     w
execure -1  x

ls -l file.sh chmod +x file.sh ./file.sh

****************************************

/opt/scripts/file.sh or go to that dir and execute shell file ./file.sh

*****************************************

generate report:
 vi file.sh 
 uname -r > /tmp/report.out 
 uname -m >> /tmp/report.out 
 echo $SHELL >> /tmp/report.out

echo - which displays the given string on screen. echo hello echo devops

****************************************

vi file.sh 
echo kernal information   : uname -r 
echo machine architecture : uname -m

vi 2.sh
echo kernal information      : `uname -r`
echo machine architecuture   : `uname -m`



vi file1.sh

print working directory : `pwd`
disk usage              : `du -h`
today date              : `date`
Listing files           : `ls`

****************************************

`` -> these are used to substitute the commands 
'' -> single quote  
"" -> double quote

\ - > back slash 
\t -> tab default 
\n -> new line 
' -> print single quotes 
" -> print double quote 
\ -> print back slash

echo 'devops' 
echo "devops" 
echo devops 
echo 'devops\tTechnology'    - notworking
echo 'devops\nTechnology'    - notworking

echo -e 'Devops\nTechnology' e means enable 
echo -e 'Devops\tTechnology'

******************************************

echo -e print working directory : \t`pwd`
echo -e 'disk usage             : \t`du -h`'
echo -e "today date             : \t`date`"
echo -e "Listing files          : \n`ls`"

*****************************************

Variable

Defination: variable is nothing but data contains we having 2 types of variables

1.system defined varibale or environment varibales 
2.user defined varibales

1.system defined variables: These  are used to define the system behaviour.

exp: 
echo $SHELL
echo $HOME
echo $PATH
echo $USER
echo $PWD


2.user defined variables:
	variables are defined into different categories 
	1)local variables
	2)global varibales

 1)local variables:
 






